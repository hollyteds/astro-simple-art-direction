---
import '../type.d.ts';
import type { HTMLAttributes } from 'astro/types';
import Picture from '../components/Picture.astro';

// @ts-expect-error
interface Props extends HTMLAttributes<'HTMLDivElement'>{
  TagName?: tagName;
  size? : {
    width: sizeLength;
    height: sizeLength;
  };
  class? : string;
  objectFit? : objectFit;
  position? : objectPosition;
  src: src;
  artDirectives? : artDirective[];
  alt? : string;
  loading?: loading;
  formats? : format[];
}

const {
  TagName = "div",
  size = { 
    width: '100%',
    height: '100%'
  },
  class: className,
  objectFit = 'cover',
  src,
  artDirectives,
  alt,
  loading,
  formats,
  position = "center",
  ...parentProps
} = Astro.props;

const { width, height } = size;
const imageProps = { src, artDirectives, alt, loading, formats}

---
<TagName {...parentProps} class:list={ [ className, 'bgp']}>
  <figure aria-hidden="true">
    <Picture {...imageProps}/>
  </figure>
  <div>
    <slot />
  </div>
</TagName>
<style define:vars={{
  imageWidth: width,
  imageHeight: height,
  attachment: objectFit,
  position: position
}}>
  .bgp {
    position: relative;
  }
  div {
    position: relative;
    z-index: 1;
  }
  figure {
    position: absolute;
    margin: 0;
    top:0;
    left:0;
    z-index: 0;
    width:100%;
    height:100%;
    pointer-events: none;
  }
  figure :global(img) {
    display: flex;
    width: var(--imageWidth);
    height: var(--imageHeight);
    object-fit: var(--attachment);
    object-position: var(--position);
    justify-content: center;
    align-items: center;
  }
</style>